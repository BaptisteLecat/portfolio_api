{
    "openapi": "3.0.3",
    "info": {
        "title": "",
        "description": "",
        "version": "0.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/api/authors": {
            "get": {
                "operationId": "getAuthorCollection",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "Author collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Author.jsonld-author.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Author-author.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Author-author.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Author resources.",
                "description": "Retrieves the collection of Author resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postAuthorCollection",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "201": {
                        "description": "Author resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author.jsonld-author.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author-author.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author-author.get"
                                }
                            }
                        },
                        "links": {
                            "GetAuthorItem": {
                                "operationId": "getAuthorItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/authors/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Author resource.",
                "description": "Creates a Author resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Author resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Author.jsonld-denormalization_authors.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Author-denormalization_authors.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Author-denormalization_authors.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/authors/{id}": {
            "get": {
                "operationId": "getAuthorItem",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "Author resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author.jsonld-author.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author-author.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author-author.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Author resource.",
                "description": "Retrieves a Author resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putAuthorItem",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "Author resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author.jsonld-author.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author-author.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author-author.get"
                                }
                            }
                        },
                        "links": {
                            "GetAuthorItem": {
                                "operationId": "getAuthorItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/authors/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Author resource.",
                "description": "Replaces the Author resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Author resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Author.jsonld-denormalization_author.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Author-denormalization_author.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Author-denormalization_author.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteAuthorItem",
                "tags": [
                    "Author"
                ],
                "responses": {
                    "204": {
                        "description": "Author resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Author resource.",
                "description": "Removes the Author resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/authors/{id}/missions": {
            "get": {
                "operationId": "api_authors_missions_get_subresourceAuthorSubresource",
                "tags": [
                    "Mission",
                    "Author"
                ],
                "responses": {
                    "200": {
                        "description": "Author resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Mission.jsonld-mission.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mission-mission.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mission-mission.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Author resource.",
                "description": "Retrieves a Author resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Author identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/companies": {
            "get": {
                "operationId": "getCompanyCollection",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Company.jsonld-company.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company-company.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company-company.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Company resources.",
                "description": "Retrieves the collection of Company resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postCompanyCollection",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "201": {
                        "description": "Company resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company.jsonld-company.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.get"
                                }
                            }
                        },
                        "links": {
                            "GetCompanyItem": {
                                "operationId": "getCompanyItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/companies/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Company resource.",
                "description": "Creates a Company resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Company resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company.jsonld-denormalization_companies.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company-denormalization_companies.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Company-denormalization_companies.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/companies/{id}": {
            "get": {
                "operationId": "getCompanyItem",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company.jsonld-company.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Company resource.",
                "description": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putCompanyItem",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company.jsonld-company.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.get"
                                }
                            }
                        },
                        "links": {
                            "GetCompanyItem": {
                                "operationId": "getCompanyItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/companies/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Company resource.",
                "description": "Replaces the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Company resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Company-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteCompanyItem",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "204": {
                        "description": "Company resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Company resource.",
                "description": "Removes the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/companies/{id}/works": {
            "get": {
                "operationId": "api_companies_works_get_subresourceCompanySubresource",
                "tags": [
                    "Work",
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Work.jsonld-work.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Company resource.",
                "description": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/contracts": {
            "get": {
                "operationId": "getContractCollection",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "200": {
                        "description": "Contract collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Contract.jsonld-contract.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contract-contract.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contract-contract.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Contract resources.",
                "description": "Retrieves the collection of Contract resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postContractCollection",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "201": {
                        "description": "Contract resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract.jsonld-contract.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-contract.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-contract.get"
                                }
                            }
                        },
                        "links": {
                            "GetContractItem": {
                                "operationId": "getContractItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/contracts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Contract resource.",
                "description": "Creates a Contract resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Contract resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract.jsonld-denormalization_contracts.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract-denormalization_contracts.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract-denormalization_contracts.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/contracts/{id}": {
            "get": {
                "operationId": "getContractItem",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract.jsonld-contract.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-contract.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-contract.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Contract resource.",
                "description": "Retrieves a Contract resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putContractItem",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract.jsonld-contract.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-contract.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract-contract.get"
                                }
                            }
                        },
                        "links": {
                            "GetContractItem": {
                                "operationId": "getContractItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/contracts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Contract resource.",
                "description": "Replaces the Contract resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Contract resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Contract-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteContractItem",
                "tags": [
                    "Contract"
                ],
                "responses": {
                    "204": {
                        "description": "Contract resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Contract resource.",
                "description": "Removes the Contract resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/contracts/{id}/works": {
            "get": {
                "operationId": "api_contracts_works_get_subresourceContractSubresource",
                "tags": [
                    "Work",
                    "Contract"
                ],
                "responses": {
                    "200": {
                        "description": "Contract resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Work.jsonld-work.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Contract resource.",
                "description": "Retrieves a Contract resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/courses": {
            "get": {
                "operationId": "getCourseCollection",
                "tags": [
                    "Course"
                ],
                "responses": {
                    "200": {
                        "description": "Course collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Course.jsonld-course.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course-course.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course-course.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Course resources.",
                "description": "Retrieves the collection of Course resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postCourseCollection",
                "tags": [
                    "Course"
                ],
                "responses": {
                    "201": {
                        "description": "Course resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course.jsonld-course.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course-course.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course-course.get"
                                }
                            }
                        },
                        "links": {
                            "GetCourseItem": {
                                "operationId": "getCourseItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/courses/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Course resource.",
                "description": "Creates a Course resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Course resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course.jsonld-denormalization_courses.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course-denormalization_courses.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Course-denormalization_courses.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/courses/{id}": {
            "get": {
                "operationId": "getCourseItem",
                "tags": [
                    "Course"
                ],
                "responses": {
                    "200": {
                        "description": "Course resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course.jsonld-course.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course-course.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course-course.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Course resource.",
                "description": "Retrieves a Course resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putCourseItem",
                "tags": [
                    "Course"
                ],
                "responses": {
                    "200": {
                        "description": "Course resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course.jsonld-course.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course-course.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course-course.get"
                                }
                            }
                        },
                        "links": {
                            "GetCourseItem": {
                                "operationId": "getCourseItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/courses/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Course resource.",
                "description": "Replaces the Course resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Course resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Course-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteCourseItem",
                "tags": [
                    "Course"
                ],
                "responses": {
                    "204": {
                        "description": "Course resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Course resource.",
                "description": "Removes the Course resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/locations": {
            "get": {
                "operationId": "getLocationCollection",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Location.jsonld-location.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location-location.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location-location.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Location resources.",
                "description": "Retrieves the collection of Location resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLocationCollection",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "201": {
                        "description": "Location resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location.jsonld-location.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location-location.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location-location.get"
                                }
                            }
                        },
                        "links": {
                            "GetLocationItem": {
                                "operationId": "getLocationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/locations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Location resource.",
                "description": "Creates a Location resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Location resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location.jsonld-denormalization_locations.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location-denormalization_locations.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Location-denormalization_locations.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/locations/{id}": {
            "get": {
                "operationId": "getLocationItem",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location.jsonld-location.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location-location.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location-location.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Location resource.",
                "description": "Retrieves a Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLocationItem",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location.jsonld-location.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location-location.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location-location.get"
                                }
                            }
                        },
                        "links": {
                            "GetLocationItem": {
                                "operationId": "getLocationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/locations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Location resource.",
                "description": "Replaces the Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Location resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Location-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLocationItem",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "204": {
                        "description": "Location resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Location resource.",
                "description": "Removes the Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/locations/{id}/companies": {
            "get": {
                "operationId": "api_locations_companies_get_subresourceLocationSubresource",
                "tags": [
                    "Company",
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Company.jsonld-company.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company-company.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company-company.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Location resource.",
                "description": "Retrieves a Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/locations/{id}/courses": {
            "get": {
                "operationId": "api_locations_courses_get_subresourceLocationSubresource",
                "tags": [
                    "Course",
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Course.jsonld-course.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course-course.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course-course.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Location resource.",
                "description": "Retrieves a Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/locations/{id}/schools": {
            "get": {
                "operationId": "api_locations_schools_get_subresourceLocationSubresource",
                "tags": [
                    "School",
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/School.jsonld-school.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/School-school.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/School-school.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Location resource.",
                "description": "Retrieves a Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/locations/{id}/works": {
            "get": {
                "operationId": "api_locations_works_get_subresourceLocationSubresource",
                "tags": [
                    "Work",
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Work.jsonld-work.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Location resource.",
                "description": "Retrieves a Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/missions": {
            "get": {
                "operationId": "getMissionCollection",
                "tags": [
                    "Mission"
                ],
                "responses": {
                    "200": {
                        "description": "Mission collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Mission.jsonld-mission.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mission-mission.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mission-mission.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Mission resources.",
                "description": "Retrieves the collection of Mission resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMissionCollection",
                "tags": [
                    "Mission"
                ],
                "responses": {
                    "201": {
                        "description": "Mission resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission.jsonld-mission.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission-mission.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission-mission.get"
                                }
                            }
                        },
                        "links": {
                            "GetMissionItem": {
                                "operationId": "getMissionItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/missions/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Mission resource.",
                "description": "Creates a Mission resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Mission resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mission.jsonld-denormalization_missions.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mission-denormalization_missions.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Mission-denormalization_missions.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/missions/{id}": {
            "get": {
                "operationId": "getMissionItem",
                "tags": [
                    "Mission"
                ],
                "responses": {
                    "200": {
                        "description": "Mission resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission.jsonld-mission.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission-mission.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission-mission.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Mission resource.",
                "description": "Retrieves a Mission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMissionItem",
                "tags": [
                    "Mission"
                ],
                "responses": {
                    "200": {
                        "description": "Mission resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission.jsonld-mission.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission-mission.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mission-mission.get"
                                }
                            }
                        },
                        "links": {
                            "GetMissionItem": {
                                "operationId": "getMissionItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/missions/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Mission resource.",
                "description": "Replaces the Mission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Mission resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mission.jsonld-denormalization_mission.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mission-denormalization_mission.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Mission-denormalization_mission.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMissionItem",
                "tags": [
                    "Mission"
                ],
                "responses": {
                    "204": {
                        "description": "Mission resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Mission resource.",
                "description": "Removes the Mission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/missions/{id}/themes": {
            "get": {
                "operationId": "api_missions_themes_get_subresourceMissionSubresource",
                "tags": [
                    "Theme",
                    "Mission"
                ],
                "responses": {
                    "200": {
                        "description": "Mission resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Theme.jsonld-theme.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Theme-theme.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Theme-theme.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Mission resource.",
                "description": "Retrieves a Mission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mission identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/projects": {
            "get": {
                "operationId": "getProjectCollection",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Project.jsonld-project.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project-project.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project-project.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Project resources.",
                "description": "Retrieves the collection of Project resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postProjectCollection",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "201": {
                        "description": "Project resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld-project.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project-project.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project-project.get"
                                }
                            }
                        },
                        "links": {
                            "GetProjectItem": {
                                "operationId": "getProjectItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/projects/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Project resource.",
                "description": "Creates a Project resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Project resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project.jsonld-denormalization_projects.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project-denormalization_projects.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Project-denormalization_projects.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/projects/{id}": {
            "get": {
                "operationId": "getProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld-project.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project-project.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project-project.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Project resource.",
                "description": "Retrieves a Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld-project.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project-project.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project-project.get"
                                }
                            }
                        },
                        "links": {
                            "GetProjectItem": {
                                "operationId": "getProjectItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/projects/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Project resource.",
                "description": "Replaces the Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Project resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project.jsonld-denormalization_project.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project-denormalization_project.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Project-denormalization_project.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "204": {
                        "description": "Project resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Project resource.",
                "description": "Removes the Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/projects/{id}/rubrics": {
            "get": {
                "operationId": "api_projects_rubrics_get_subresourceProjectSubresource",
                "tags": [
                    "Rubrics",
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Rubrics.jsonld-rubric.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rubrics-rubric.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rubrics-rubric.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Project resource.",
                "description": "Retrieves a Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/rubrics": {
            "get": {
                "operationId": "getRubricsCollection",
                "tags": [
                    "Rubrics"
                ],
                "responses": {
                    "200": {
                        "description": "Rubrics collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Rubrics.jsonld-rubric.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rubrics-rubric.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rubrics-rubric.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Rubrics resources.",
                "description": "Retrieves the collection of Rubrics resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postRubricsCollection",
                "tags": [
                    "Rubrics"
                ],
                "responses": {
                    "201": {
                        "description": "Rubrics resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics.jsonld-rubric.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics-rubric.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics-rubric.get"
                                }
                            }
                        },
                        "links": {
                            "GetRubricsItem": {
                                "operationId": "getRubricsItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/rubrics/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Rubrics resource.",
                "description": "Creates a Rubrics resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Rubrics resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rubrics.jsonld-denormalization_rubrics.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rubrics-denormalization_rubrics.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Rubrics-denormalization_rubrics.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/rubrics/{id}": {
            "get": {
                "operationId": "getRubricsItem",
                "tags": [
                    "Rubrics"
                ],
                "responses": {
                    "200": {
                        "description": "Rubrics resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics.jsonld-rubric.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics-rubric.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics-rubric.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Rubrics resource.",
                "description": "Retrieves a Rubrics resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putRubricsItem",
                "tags": [
                    "Rubrics"
                ],
                "responses": {
                    "200": {
                        "description": "Rubrics resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics.jsonld-rubric.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics-rubric.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rubrics-rubric.get"
                                }
                            }
                        },
                        "links": {
                            "GetRubricsItem": {
                                "operationId": "getRubricsItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/rubrics/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Rubrics resource.",
                "description": "Replaces the Rubrics resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Rubrics resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rubrics.jsonld-denormalization_rubric.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rubrics-denormalization_rubric.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Rubrics-denormalization_rubric.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteRubricsItem",
                "tags": [
                    "Rubrics"
                ],
                "responses": {
                    "204": {
                        "description": "Rubrics resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Rubrics resource.",
                "description": "Removes the Rubrics resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/schools": {
            "get": {
                "operationId": "getSchoolCollection",
                "tags": [
                    "School"
                ],
                "responses": {
                    "200": {
                        "description": "School collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/School.jsonld-school.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/School-school.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/School-school.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of School resources.",
                "description": "Retrieves the collection of School resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSchoolCollection",
                "tags": [
                    "School"
                ],
                "responses": {
                    "201": {
                        "description": "School resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/School.jsonld-school.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/School-school.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/School-school.get"
                                }
                            }
                        },
                        "links": {
                            "GetSchoolItem": {
                                "operationId": "getSchoolItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/schools/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a School resource.",
                "description": "Creates a School resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new School resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/School.jsonld-denormalization_schools.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/School-denormalization_schools.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/School-denormalization_schools.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/schools/{id}": {
            "get": {
                "operationId": "getSchoolItem",
                "tags": [
                    "School"
                ],
                "responses": {
                    "200": {
                        "description": "School resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/School.jsonld-school.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/School-school.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/School-school.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a School resource.",
                "description": "Retrieves a School resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSchoolItem",
                "tags": [
                    "School"
                ],
                "responses": {
                    "200": {
                        "description": "School resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/School.jsonld-school.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/School-school.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/School-school.get"
                                }
                            }
                        },
                        "links": {
                            "GetSchoolItem": {
                                "operationId": "getSchoolItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/schools/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the School resource.",
                "description": "Replaces the School resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated School resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/School.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/School-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/School-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSchoolItem",
                "tags": [
                    "School"
                ],
                "responses": {
                    "204": {
                        "description": "School resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the School resource.",
                "description": "Removes the School resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/schools/{id}/courses": {
            "get": {
                "operationId": "api_schools_courses_get_subresourceSchoolSubresource",
                "tags": [
                    "Course",
                    "School"
                ],
                "responses": {
                    "200": {
                        "description": "School resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Course.jsonld-course.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course-course.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course-course.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a School resource.",
                "description": "Retrieves a School resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "School identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/technologies": {
            "get": {
                "operationId": "getTechnologyCollection",
                "tags": [
                    "Technology"
                ],
                "responses": {
                    "200": {
                        "description": "Technology collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Technology.jsonld-technology.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Technology-technology.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Technology-technology.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Technology resources.",
                "description": "Retrieves the collection of Technology resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postTechnologyCollection",
                "tags": [
                    "Technology"
                ],
                "responses": {
                    "201": {
                        "description": "Technology resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology.jsonld-technology.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology-technology.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology-technology.get"
                                }
                            }
                        },
                        "links": {
                            "GetTechnologyItem": {
                                "operationId": "getTechnologyItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/technologies/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Technology resource.",
                "description": "Creates a Technology resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Technology resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Technology.jsonld-denormalization_technologies.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Technology-denormalization_technologies.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Technology-denormalization_technologies.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/technologies/{id}": {
            "get": {
                "operationId": "getTechnologyItem",
                "tags": [
                    "Technology"
                ],
                "responses": {
                    "200": {
                        "description": "Technology resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology.jsonld-technology.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology-technology.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology-technology.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Technology resource.",
                "description": "Retrieves a Technology resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putTechnologyItem",
                "tags": [
                    "Technology"
                ],
                "responses": {
                    "200": {
                        "description": "Technology resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology.jsonld-technology.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology-technology.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Technology-technology.get"
                                }
                            }
                        },
                        "links": {
                            "GetTechnologyItem": {
                                "operationId": "getTechnologyItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/technologies/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Technology resource.",
                "description": "Replaces the Technology resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Technology resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Technology.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Technology-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Technology-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteTechnologyItem",
                "tags": [
                    "Technology"
                ],
                "responses": {
                    "204": {
                        "description": "Technology resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Technology resource.",
                "description": "Removes the Technology resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/themes": {
            "get": {
                "operationId": "getThemeCollection",
                "tags": [
                    "Theme"
                ],
                "responses": {
                    "200": {
                        "description": "Theme collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Theme.jsonld-theme.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Theme-theme.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Theme-theme.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Theme resources.",
                "description": "Retrieves the collection of Theme resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postThemeCollection",
                "tags": [
                    "Theme"
                ],
                "responses": {
                    "201": {
                        "description": "Theme resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme.jsonld-theme.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme-theme.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme-theme.get"
                                }
                            }
                        },
                        "links": {
                            "GetThemeItem": {
                                "operationId": "getThemeItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/themes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Theme resource.",
                "description": "Creates a Theme resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Theme resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Theme.jsonld-denormalization_themes.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Theme-denormalization_themes.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Theme-denormalization_themes.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/themes/{id}": {
            "get": {
                "operationId": "getThemeItem",
                "tags": [
                    "Theme"
                ],
                "responses": {
                    "200": {
                        "description": "Theme resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme.jsonld-theme.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme-theme.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme-theme.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Theme resource.",
                "description": "Retrieves a Theme resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putThemeItem",
                "tags": [
                    "Theme"
                ],
                "responses": {
                    "200": {
                        "description": "Theme resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme.jsonld-theme.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme-theme.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme-theme.get"
                                }
                            }
                        },
                        "links": {
                            "GetThemeItem": {
                                "operationId": "getThemeItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/themes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Theme resource.",
                "description": "Replaces the Theme resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Theme resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Theme.jsonld-denormalization_theme.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Theme-denormalization_theme.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Theme-denormalization_theme.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteThemeItem",
                "tags": [
                    "Theme"
                ],
                "responses": {
                    "204": {
                        "description": "Theme resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Theme resource.",
                "description": "Removes the Theme resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/themes/{id}/missions": {
            "get": {
                "operationId": "api_themes_missions_get_subresourceThemeSubresource",
                "tags": [
                    "Mission",
                    "Theme"
                ],
                "responses": {
                    "200": {
                        "description": "Theme resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Mission.jsonld-mission.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mission-mission.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mission-mission.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Theme resource.",
                "description": "Retrieves a Theme resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/works": {
            "get": {
                "operationId": "getWorkCollection",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Work.jsonld-work.get"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Work-work.get"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Work resources.",
                "description": "Retrieves the collection of Work resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postWorkCollection",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "201": {
                        "description": "Work resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work.jsonld-work.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work-work.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work-work.get"
                                }
                            }
                        },
                        "links": {
                            "GetWorkItem": {
                                "operationId": "getWorkItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/works/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Work resource.",
                "description": "Creates a Work resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Work resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work.jsonld-denormalization_works.post"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work-denormalization_works.post"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Work-denormalization_works.post"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/works/{id}": {
            "get": {
                "operationId": "getWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work.jsonld-work.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work-work.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work-work.get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Work resource.",
                "description": "Retrieves a Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "200": {
                        "description": "Work resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work.jsonld-work.get"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work-work.get"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Work-work.get"
                                }
                            }
                        },
                        "links": {
                            "GetWorkItem": {
                                "operationId": "getWorkItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/works/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Work resource.",
                "description": "Replaces the Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Work resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work.jsonld-denormalization_barcode.put"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Work-denormalization_barcode.put"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Work-denormalization_barcode.put"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteWorkItem",
                "tags": [
                    "Work"
                ],
                "responses": {
                    "204": {
                        "description": "Work resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Work resource.",
                "description": "Removes the Work resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "Author-author.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Author-denormalization_author.put": {
                "type": "object"
            },
            "Author-denormalization_authors.post": {
                "type": "object"
            },
            "Author-mission.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Author.jsonld-author.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Author.jsonld-denormalization_author.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Author.jsonld-denormalization_authors.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Author.jsonld-mission.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Company-company.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employees": {
                        "type": "integer"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location-company.get"
                    },
                    "works": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Company-denormalization_barcode.put": {
                "type": "object"
            },
            "Company-denormalization_companies.post": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employees": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "works": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Company-work.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employees": {
                        "type": "integer"
                    }
                }
            },
            "Company.jsonld-company.get": {
                "type": "object",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employees": {
                        "type": "integer"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location.jsonld-company.get"
                    },
                    "works": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Company.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Company.jsonld-denormalization_companies.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employees": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "works": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "Company.jsonld-work.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employees": {
                        "type": "integer"
                    }
                }
            },
            "Contract-contract.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Contract-denormalization_barcode.put": {
                "type": "object"
            },
            "Contract-denormalization_contracts.post": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Contract-work.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Contract.jsonld-contract.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Contract.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Contract.jsonld-denormalization_contracts.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Contract.jsonld-work.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Course-course.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location-course.get"
                    },
                    "school": {
                        "$ref": "#/components/schemas/School-course.get"
                    }
                }
            },
            "Course-denormalization_barcode.put": {
                "type": "object"
            },
            "Course-denormalization_courses.post": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "school": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "Course.jsonld-course.get": {
                "type": "object",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location.jsonld-course.get"
                    },
                    "school": {
                        "$ref": "#/components/schemas/School.jsonld-course.get"
                    }
                }
            },
            "Course.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Course.jsonld-denormalization_courses.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "school": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "Location-company.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location-course.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location-denormalization_barcode.put": {
                "type": "object"
            },
            "Location-denormalization_locations.post": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location-location.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location-school.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location-work.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location.jsonld-company.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location.jsonld-course.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Location.jsonld-denormalization_locations.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location.jsonld-location.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location.jsonld-school.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Location.jsonld-work.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "Mission-denormalization_mission.put": {
                "type": "object"
            },
            "Mission-denormalization_missions.post": {
                "type": "object"
            },
            "Mission-mission.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "created_at": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "$ref": "#/components/schemas/Author-mission.get"
                    }
                }
            },
            "Mission.jsonld-denormalization_mission.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Mission.jsonld-denormalization_missions.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Mission.jsonld-mission.get": {
                "type": "object",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "created_at": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "$ref": "#/components/schemas/Author.jsonld-mission.get"
                    }
                }
            },
            "Project-denormalization_project.put": {
                "type": "object"
            },
            "Project-denormalization_projects.post": {
                "type": "object"
            },
            "Project-project.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Project-rubric.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Project.jsonld-denormalization_project.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Project.jsonld-denormalization_projects.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Project.jsonld-project.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Project.jsonld-rubric.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    }
                }
            },
            "Rubrics-denormalization_rubric.put": {
                "type": "object"
            },
            "Rubrics-denormalization_rubrics.post": {
                "type": "object"
            },
            "Rubrics-rubric.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "subtitle": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "project": {
                        "$ref": "#/components/schemas/Project-rubric.get"
                    }
                }
            },
            "Rubrics.jsonld-denormalization_rubric.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Rubrics.jsonld-denormalization_rubrics.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Rubrics.jsonld-rubric.get": {
                "type": "object",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "subtitle": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "project": {
                        "$ref": "#/components/schemas/Project.jsonld-rubric.get"
                    }
                }
            },
            "School-course.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location-course.get"
                    }
                }
            },
            "School-denormalization_barcode.put": {
                "type": "object"
            },
            "School-denormalization_schools.post": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "School-school.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location-school.get"
                    }
                }
            },
            "School.jsonld-course.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location.jsonld-course.get"
                    }
                }
            },
            "School.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "School.jsonld-denormalization_schools.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "School.jsonld-school.get": {
                "type": "object",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location.jsonld-school.get"
                    }
                }
            },
            "Technology-denormalization_barcode.put": {
                "type": "object"
            },
            "Technology-denormalization_technologies.post": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Technology-technology.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Technology.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Technology.jsonld-denormalization_technologies.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Technology.jsonld-technology.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Theme-denormalization_theme.put": {
                "type": "object"
            },
            "Theme-denormalization_themes.post": {
                "type": "object"
            },
            "Theme-theme.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Theme.jsonld-denormalization_theme.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Theme.jsonld-denormalization_themes.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Theme.jsonld-theme.get": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "label": {
                        "type": "string"
                    }
                }
            },
            "Work-denormalization_barcode.put": {
                "type": "object"
            },
            "Work-denormalization_works.post": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "contract": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "Work-work.get": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "company": {
                        "$ref": "#/components/schemas/Company-work.get"
                    },
                    "contract": {
                        "$ref": "#/components/schemas/Contract-work.get"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location-work.get"
                    }
                }
            },
            "Work.jsonld-denormalization_barcode.put": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Work.jsonld-denormalization_works.post": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "contract": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "Work.jsonld-work.get": {
                "type": "object",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "company": {
                        "$ref": "#/components/schemas/Company.jsonld-work.get"
                    },
                    "contract": {
                        "$ref": "#/components/schemas/Contract.jsonld-work.get"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location.jsonld-work.get"
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {}
    },
    "security": [],
    "tags": []
}
